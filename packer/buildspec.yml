version: 0.2
env:
  variables:
    arch: 'x86_64'
    source_ami_owners: 'amazon'
    AWS_POLL_DELAY_SECONDS: 30
    AWS_MAX_ATTEMPTS: 1000
  exported-variables:
    - AMI_Version
    - AMIID
    - PROD_ENV
phases:
  pre_build:
    commands:
      # Generate environment variables to use futher in pipeline. 
      - export AMI_Version=Batch-$VersionTag-v$(date +'%F-%H-%M')
      - export PROD_ENV=$VersionTag-v$(date +'%F-%H-%M')
      # Install cnf-lint and cfn_nag_scan for template validation and security checks in templates. 
      - echo "\e[0;33m Install cfn_nag_scan and cfn-lint ClodFormation utilites for security scan and validation of templates test and pilot templates"
      - pip install cfn-lint && gem install cfn-nag
      - echo "\e[0;33m ** CloudFormation templates validation check **"
      - cfn-lint cdk.out/BatchStack.template.json cdk.out/TestStack.template.json && echo "\e[0;32m ********* Template validation looks good *********"
      - echo "\e[0;33m ** ClodFormation templates security level check **"
      - cfn_nag_scan --input-path cdk.out/BatchStack.template.json cdk.out/TestStack.template.json && echo "\e[0;32m ********* Template scanning looks good *********"
      # - export AWS_POLL_DELAY_SECONDS=30
      # - export AWS_MAX_ATTEMPTS=1000
      # Install latest version of packer version.
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
      - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - apt-get update && apt-get install packer
      - apt-get install build-essential
  build:
    commands:
      - packer validate --var aws_region=$AWS_DEFAULT_REGION --var aws_ami_name=$AMI_Version --var arch=$arch --var source_ami_owners=$source_ami_owners --var name_tag=$NAMETAG ecs-packer-template.json
      - packer build --var aws_region=$AWS_DEFAULT_REGION --var aws_ami_name=$AMI_Version --var arch=$arch --var source_ami_owners=$source_ami_owners --var name_tag=$NAMETAG ecs-packer-template.json
  post_build:
    commands:
      - export AMIID=$(aws ec2 describe-images --filters "Name=name,Values=$AMI_Version" --query 'Images[*].[ImageId]' --output text)